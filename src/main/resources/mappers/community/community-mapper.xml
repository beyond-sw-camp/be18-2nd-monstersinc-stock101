<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.monstersinc.stock101.community.model.mapper.CommunityMapper">

    <sql id="selectPostSql">
        SELECT
            post_id,
            opinion,
            content,
            created_at,
            is_deleted,
            stock_id,
            user_id
        FROM posts
    </sql>

    <sql id="selectCommentSql">
        SELECT
            comment_id,
            content,
            created_at,
            is_deleted,
            post_id,
            user_id,
            parent_comment_id
        FROM comments
    </sql>

    <resultMap id="postResultMap" type="Post">
        <id     property="postId"   column="post_id" />
        <result property="opinion"  column="opinion" />
        <result property="content"  column="content" />
        <result property="createdAt" column="created_at" />
        <!-- boolean isDeleted -> 자바빈 프로퍼티명 'deleted' 로 매핑 -->
        <result property="isDeleted"  column="is_deleted" />
        <result property="stockId"  column="stock_id" />
        <result property="userId"   column="user_id" />
    </resultMap>

    <resultMap id="commentResultMap" type="Comment">
        <id property="commentId" column="comment_id"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="created_at"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="postId" column="post_id"/>
        <result property="userId" column="user_id"/>
        <result property="parentCommentId" column="parent_comment_id"/>
    </resultMap>


    <select id="selectPostsByStockId"
            resultMap="postResultMap">
        <include refid="selectPostSql" />
        <where>
            stock_id = #{stockId} AND is_deleted = 0
        </where>
        ORDER BY created_at DESC
    </select>

    <select id="selectPostById"
            parameterType="long"
            resultMap="postResultMap">
        <include refid="selectPostSql" />
        <where>
            post_id = #{postId} AND is_deleted = 0
        </where>
    </select>

    <insert id="insertPost"
            parameterType="Post"
            useGeneratedKeys="true"
            keyProperty="postId">
        INSERT INTO posts (
            opinion, content, stock_id, user_id
        ) VALUES (
                     #{opinion}, #{content}, #{stockId}, #{userId}
                 )
    </insert>

    <update id="softDeletePost" parameterType="long">
        UPDATE posts
        SET is_deleted = 1
        WHERE post_id = #{postId}
    </update>

    <insert id="insertLike" parameterType="map">
        INSERT INTO user_likes (post_id, user_id)
        VALUES (#{postId}, #{userId})
    </insert>

    <delete id="deleteLike" parameterType="map">
        DELETE FROM user_likes
        WHERE post_id = #{postId}
          AND user_id = #{userId}
    </delete>

    <select id="selectCommentListByPost" parameterType="long" resultMap="commentResultMap">
        <include refid="selectCommentSql"/>
        WHERE post_id = #{postId}
        ORDER BY
        CASE WHEN parent_comment_id IS NULL THEN comment_id ELSE parent_comment_id END,
        created_at ASC
    </select>

    <select id="selectPostsByStockId"
            resultMap="postResultMap">
        <include refid="selectPostSql" />
        <where>
            stock_id = #{stockId} AND is_deleted = 0
        </where>
        ORDER BY created_at DESC
    </select>

    <insert id="insertComment"
            parameterType="Comment"
            useGeneratedKeys="true"
            keyProperty="commentId">
        INSERT INTO comments (
            content, user_id, post_id, parent_comment_id
        ) VALUES (
                     #{content}, #{userId}, #{postId}, #{parentCommentId}
                 )
    </insert>

    <select id="selectCommentById"
            parameterType="long"
            resultMap="comemntResultMap">
        <include refid="selectCommentSql" />
        <where>
            comment_id = #{commentId} AND is_deleted = 0
        </where>
    </select>
</mapper>